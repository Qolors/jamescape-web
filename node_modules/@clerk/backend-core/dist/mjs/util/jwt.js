import { TokenVerificationErrorReason } from '../types';
import { TokenVerificationError } from './errors';
const DEFAULT_ADDITIONAL_CLOCK_SKEW = 0;
export function isExpired(payload, additionalClockSkew = DEFAULT_ADDITIONAL_CLOCK_SKEW) {
    const now = Date.now() / 1000;
    if (payload.exp && now > payload.exp + additionalClockSkew) {
        throw new TokenVerificationError(TokenVerificationErrorReason.Expired);
    }
    if (payload.nbf && now < payload.nbf - additionalClockSkew) {
        throw new TokenVerificationError(TokenVerificationErrorReason.NotActiveYet);
    }
}
export function checkClaims(claims, authorizedParties) {
    if (!claims.iss || !claims.iss.startsWith('https://clerk')) {
        throw new TokenVerificationError(TokenVerificationErrorReason.InvalidIssuer);
    }
    if (claims.azp && authorizedParties && authorizedParties.length > 0) {
        if (!authorizedParties.includes(claims.azp)) {
            throw new TokenVerificationError(TokenVerificationErrorReason.UnauthorizedParty);
        }
    }
}
