import { APIClient, APIRequestOptions } from './endpoints';
import { AllowlistIdentifierAPI, ClientAPI, EmailAPI, InvitationAPI, OrganizationAPI, RedirectUrlAPI, SessionAPI, SignInTokenAPI, SMSMessageAPI, UserAPI } from './endpoints';
declare type ClerkBackendAPIOptions = {
    apiClient: APIClient;
    apiKey?: string;
    apiUrl?: string;
    apiVersion?: string;
    libName: string;
    libVersion: string;
};
export declare class ClerkBackendAPI {
    options: ClerkBackendAPIOptions;
    private _allowlistIdentifierAPI?;
    private _clientAPI?;
    private _emailAPI?;
    private _invitationAPI?;
    private _organizationAPI?;
    private _redirectUrlAPI?;
    private _sessionAPI?;
    private _signInTokenAPI?;
    private _smsMessageAPI?;
    private _userAPI?;
    apiClient: APIClient;
    apiKey: string;
    apiUrl: string;
    apiVersion: string;
    userAgent: string;
    constructor(options: ClerkBackendAPIOptions);
    request<T>(requestOptions: APIRequestOptions): Promise<T>;
    fetchInterstitial(): Promise<string>;
    getDefaultQueryParams(): {};
    getDefaultHeadersParams(): {
        Authorization: string;
        'Content-Type': string;
        'User-Agent': string;
        'X-Clerk-SDK': string;
    };
    getDefaultBodyParams(): {};
    get allowlistIdentifiers(): AllowlistIdentifierAPI;
    get clients(): ClientAPI;
    get emails(): EmailAPI;
    get invitations(): InvitationAPI;
    get organizations(): OrganizationAPI;
    get redirectUrls(): RedirectUrlAPI;
    get sessions(): SessionAPI;
    get signInTokens(): SignInTokenAPI;
    get smsMessages(): SMSMessageAPI;
    get users(): UserAPI;
}
export {};
//# sourceMappingURL=ClerkBackendApi.d.ts.map