import { joinPaths } from '../../util/path';
import { AbstractAPI } from './AbstractApi';
const basePath = '/users';
export class UserAPI extends AbstractAPI {
    async getUserList(params = {}) {
        return this.APIClient.request({
            method: 'GET',
            path: basePath,
            queryParams: params,
        });
    }
    async getUser(userId) {
        this.requireId(userId);
        return this.APIClient.request({
            method: 'GET',
            path: joinPaths(basePath, userId),
        });
    }
    async createUser(params) {
        return this.APIClient.request({
            method: 'POST',
            path: basePath,
            bodyParams: params,
        });
    }
    async updateUser(userId, params = {}) {
        this.requireId(userId);
        return this.APIClient.request({
            method: 'PATCH',
            path: joinPaths(basePath, userId),
            bodyParams: params,
        });
    }
    async updateUserMetadata(userId, params) {
        this.requireId(userId);
        return this.APIClient.request({
            method: 'PATCH',
            path: joinPaths(basePath, userId, 'metadata'),
            bodyParams: params,
        });
    }
    async deleteUser(userId) {
        this.requireId(userId);
        return this.APIClient.request({
            method: 'DELETE',
            path: joinPaths(basePath, userId),
        });
    }
    async getCount(params = {}) {
        return this.APIClient.request({
            method: 'GET',
            path: joinPaths(basePath, 'count'),
            queryParams: params,
        });
    }
    async getUserOauthAccessToken(userId, provider) {
        this.requireId(userId);
        return this.APIClient.request({
            method: 'GET',
            path: joinPaths(basePath, userId, 'oauth_access_tokens', provider),
        });
    }
    async disableUserMFA(userId) {
        this.requireId(userId);
        return this.APIClient.request({
            method: 'DELETE',
            path: joinPaths(basePath, userId, 'mfa'),
        });
    }
}
