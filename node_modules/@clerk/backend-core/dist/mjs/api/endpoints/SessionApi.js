import { joinPaths } from '../../util/path';
import { AbstractAPI } from './AbstractApi';
const basePath = '/sessions';
export class SessionAPI extends AbstractAPI {
    constructor() {
        super(...arguments);
        this.getSessionList = async (queryParams) => this.APIClient.request({
            method: 'GET',
            path: basePath,
            queryParams: queryParams,
        });
        this.getSession = async (sessionId) => {
            this.requireId(sessionId);
            return this.APIClient.request({
                method: 'GET',
                path: joinPaths(basePath, sessionId),
            });
        };
        this.revokeSession = async (sessionId) => {
            this.requireId(sessionId);
            return this.APIClient.request({
                method: 'POST',
                path: joinPaths(basePath, sessionId, 'revoke'),
            });
        };
        this.verifySession = async (sessionId, token) => {
            this.requireId(sessionId);
            return this.APIClient.request({
                method: 'POST',
                path: joinPaths(basePath, sessionId, 'verify'),
                bodyParams: { token },
            });
        };
        this.getToken = async (sessionId, template) => {
            this.requireId(sessionId);
            return (await this.APIClient.request({
                method: 'POST',
                path: joinPaths(basePath, sessionId, 'tokens', template || ''),
            })).jwt;
        };
    }
}
