export declare type APIRequestOptions = {
    method: 'GET' | 'POST' | 'PATCH' | 'DELETE' | 'PUT';
    queryParams?: Record<string, unknown>;
    headerParams?: Record<string, unknown>;
    bodyParams?: object;
} & ({
    url: string;
    path?: string;
} | {
    url?: string;
    path: string;
});
export interface APIClient {
    request: <T>(options: APIRequestOptions) => Promise<T>;
}
export declare abstract class AbstractAPI {
    protected APIClient: APIClient;
    constructor(APIClient: APIClient);
    protected requireId(id: string): void;
}
//# sourceMappingURL=AbstractApi.d.ts.map