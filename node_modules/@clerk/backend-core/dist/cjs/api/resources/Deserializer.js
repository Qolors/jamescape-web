"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserialize = void 0;
const Logger_1 = require("../../util/Logger");
const _1 = require(".");
const JSON_1 = require("./JSON");
function deserialize(payload) {
    if (Array.isArray(payload)) {
        return payload.map(item => jsonToObject(item));
    }
    else if (isPaginated(payload)) {
        return payload.data.map(item => jsonToObject(item));
    }
    else {
        return jsonToObject(payload);
    }
}
exports.deserialize = deserialize;
function isPaginated(payload) {
    return payload.data !== undefined;
}
function getCount(item) {
    return item.total_count;
}
function jsonToObject(item) {
    switch (item.object) {
        case JSON_1.ObjectType.AllowlistIdentifier:
            return _1.AllowlistIdentifier.fromJSON(item);
        case JSON_1.ObjectType.Client:
            return _1.Client.fromJSON(item);
        case JSON_1.ObjectType.Email:
            return _1.Email.fromJSON(item);
        case JSON_1.ObjectType.Invitation:
            return _1.Invitation.fromJSON(item);
        case JSON_1.ObjectType.Organization:
            return _1.Organization.fromJSON(item);
        case JSON_1.ObjectType.OrganizationInvitation:
            return _1.OrganizationInvitation.fromJSON(item);
        case JSON_1.ObjectType.OrganizationMembership:
            return _1.OrganizationMembership.fromJSON(item);
        case JSON_1.ObjectType.RedirectUrl:
            return _1.RedirectUrl.fromJSON(item);
        case JSON_1.ObjectType.SignInToken:
            return _1.SignInToken.fromJSON(item);
        case JSON_1.ObjectType.Session:
            return _1.Session.fromJSON(item);
        case JSON_1.ObjectType.SmsMessage:
            return _1.SMSMessage.fromJSON(item);
        case JSON_1.ObjectType.Token:
            return _1.Token.fromJSON(item);
        case JSON_1.ObjectType.TotalCount:
            return getCount(item);
        case JSON_1.ObjectType.User:
            return _1.User.fromJSON(item);
        default:
            Logger_1.Logger.error(`Unexpected object type: ${item.object}`);
            return item;
    }
}
