{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,MAAM,YAAY,CAAC;AAE/B,MAAM,iBAAiB,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;AAC9C,MAAM,oBAAoB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;AACpE,MAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC;AAC1C,MAAM,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;AACxC,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;AAClD,MAAM,aAAa,GAAG,iBAAiB,CAAC,aAAa,CAAC;AACtD,MAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;AAC5C,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;AAClD,MAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC;AAEtC,6EAA6E;AAC7E,eAAe,iBAAiB,CAAC;AAEjC,yBAAyB;AACzB,OAAO,EACL,oBAAoB,EACpB,OAAO,EACP,MAAM,EACN,WAAW,EACX,aAAa,EACb,QAAQ,EACR,WAAW,EACX,KAAK,GACN,CAAC;AAEF,mBAAmB;AACnB,OAAO,EACL,mBAAmB,EACnB,MAAM,EACN,KAAK,EACL,YAAY,EACZ,eAAe,EACf,kBAAkB,EAClB,UAAU,EACV,YAAY,EACZ,sBAAsB,EACtB,sBAAsB,EACtB,oCAAoC,EACpC,WAAW,EAEX,UAAU,EACV,IAAI,EACJ,YAAY,GACb,MAAM,YAAY,CAAC;AAEpB,8BAA8B;AAE9B,MAAM,oBAAoB,GACxB,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAC5D,MAAM,uBAAuB,GAC3B,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAE/D,OAAO,EAAE,oBAAoB,EAAE,uBAAuB,EAAE,CAAC;AAYzD,oDAAoD;AACpD,uDAAuD;AAEvD,MAAM,UAAU,cAAc,CAAC,KAAa;IAC1C,KAAK,CAAC,WAAW,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;AACrC,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,KAAa;IAChD,KAAK,CAAC,WAAW,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;AACrC,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,KAAa;IAC9C,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;AACzC,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,KAAkB;IACpD,KAAK,CAAC,WAAW,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;AAC1C,CAAC","sourcesContent":["import type { RequestInit } from 'node-fetch';\n\nimport Clerk from './instance';\n\nconst singletonInstance = Clerk.getInstance();\nconst allowlistIdentifiers = singletonInstance.allowlistIdentifiers;\nconst clients = singletonInstance.clients;\nconst emails = singletonInstance.emails;\nconst invitations = singletonInstance.invitations;\nconst organizations = singletonInstance.organizations;\nconst sessions = singletonInstance.sessions;\nconst smsMessages = singletonInstance.smsMessages;\nconst users = singletonInstance.users;\n\n// Export a default singleton instance that should suffice for most use cases\nexport default singletonInstance;\n\n// Export sub-api objects\nexport {\n  allowlistIdentifiers,\n  clients,\n  emails,\n  invitations,\n  organizations,\n  sessions,\n  smsMessages,\n  users,\n};\n\n// Export resources\nexport {\n  AllowlistIdentifier,\n  Client,\n  Email,\n  EmailAddress,\n  ExternalAccount,\n  IdentificationLink,\n  Invitation,\n  Organization,\n  OrganizationInvitation,\n  OrganizationMembership,\n  OrganizationMembershipPublicUserData,\n  PhoneNumber,\n  Session,\n  SMSMessage,\n  User,\n  Verification,\n} from './instance';\n\n// Export middleware functions\n\nconst ClerkExpressWithAuth =\n  singletonInstance.expressWithAuth.bind(singletonInstance);\nconst ClerkExpressRequireAuth =\n  singletonInstance.expressRequireAuth.bind(singletonInstance);\n\nexport { ClerkExpressWithAuth, ClerkExpressRequireAuth };\n\n// Export wrapper types for Next.js requests\nexport {\n  LooseAuthProp,\n  StrictAuthProp,\n  WithAuthProp,\n  RequireAuthProp,\n  Middleware as ClerkMiddleware,\n  MiddlewareOptions as ClerkMiddlewareOptions,\n} from './Clerk';\n\n// Export setters for the default singleton instance\n// Useful if you only have access to a sub-api instance\n\nexport function setClerkApiKey(value: string) {\n  Clerk.getInstance().apiKey = value;\n}\n\nexport function setClerkServerApiUrl(value: string) {\n  Clerk.getInstance().apiUrl = value;\n}\n\nexport function setClerkApiVersion(value: string) {\n  Clerk.getInstance().apiVersion = value;\n}\n\nexport function setClerkHttpOptions(value: RequestInit) {\n  Clerk.getInstance().httpOptions = value;\n}\n"]}