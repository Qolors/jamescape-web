{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;AAEA,kEAA+B;AAE/B,MAAM,iBAAiB,GAAG,kBAAK,CAAC,WAAW,EAAE,CAAC;AAC9C,MAAM,oBAAoB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;AAclE,oDAAoB;AAbtB,MAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC;AAcxC,0BAAO;AAbT,MAAM,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;AActC,wBAAM;AAbR,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;AAchD,kCAAW;AAbb,MAAM,aAAa,GAAG,iBAAiB,CAAC,aAAa,CAAC;AAcpD,sCAAa;AAbf,MAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;AAc1C,4BAAQ;AAbV,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;AAchD,kCAAW;AAbb,MAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC;AAcpC,sBAAK;AAZP,6EAA6E;AAC7E,kBAAe,iBAAiB,CAAC;AAcjC,mBAAmB;AACnB,uCAiBoB;AAhBlB,+GAAA,mBAAmB,OAAA;AACnB,kGAAA,MAAM,OAAA;AACN,iGAAA,KAAK,OAAA;AACL,wGAAA,YAAY,OAAA;AACZ,2GAAA,eAAe,OAAA;AACf,8GAAA,kBAAkB,OAAA;AAClB,sGAAA,UAAU,OAAA;AACV,wGAAA,YAAY,OAAA;AACZ,kHAAA,sBAAsB,OAAA;AACtB,kHAAA,sBAAsB,OAAA;AACtB,gIAAA,oCAAoC,OAAA;AACpC,uGAAA,WAAW,OAAA;AAEX,sGAAA,UAAU,OAAA;AACV,gGAAA,IAAI,OAAA;AACJ,wGAAA,YAAY,OAAA;AAGd,8BAA8B;AAE9B,MAAM,oBAAoB,GACxB,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAInD,oDAAoB;AAH7B,MAAM,uBAAuB,GAC3B,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAEhC,0DAAuB;AAYtD,oDAAoD;AACpD,uDAAuD;AAEvD,SAAgB,cAAc,CAAC,KAAa;IAC1C,kBAAK,CAAC,WAAW,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;AACrC,CAAC;AAFD,wCAEC;AAED,SAAgB,oBAAoB,CAAC,KAAa;IAChD,kBAAK,CAAC,WAAW,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;AACrC,CAAC;AAFD,oDAEC;AAED,SAAgB,kBAAkB,CAAC,KAAa;IAC9C,kBAAK,CAAC,WAAW,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;AACzC,CAAC;AAFD,gDAEC;AAED,SAAgB,mBAAmB,CAAC,KAAkB;IACpD,kBAAK,CAAC,WAAW,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;AAC1C,CAAC;AAFD,kDAEC","sourcesContent":["import type { RequestInit } from 'node-fetch';\n\nimport Clerk from './instance';\n\nconst singletonInstance = Clerk.getInstance();\nconst allowlistIdentifiers = singletonInstance.allowlistIdentifiers;\nconst clients = singletonInstance.clients;\nconst emails = singletonInstance.emails;\nconst invitations = singletonInstance.invitations;\nconst organizations = singletonInstance.organizations;\nconst sessions = singletonInstance.sessions;\nconst smsMessages = singletonInstance.smsMessages;\nconst users = singletonInstance.users;\n\n// Export a default singleton instance that should suffice for most use cases\nexport default singletonInstance;\n\n// Export sub-api objects\nexport {\n  allowlistIdentifiers,\n  clients,\n  emails,\n  invitations,\n  organizations,\n  sessions,\n  smsMessages,\n  users,\n};\n\n// Export resources\nexport {\n  AllowlistIdentifier,\n  Client,\n  Email,\n  EmailAddress,\n  ExternalAccount,\n  IdentificationLink,\n  Invitation,\n  Organization,\n  OrganizationInvitation,\n  OrganizationMembership,\n  OrganizationMembershipPublicUserData,\n  PhoneNumber,\n  Session,\n  SMSMessage,\n  User,\n  Verification,\n} from './instance';\n\n// Export middleware functions\n\nconst ClerkExpressWithAuth =\n  singletonInstance.expressWithAuth.bind(singletonInstance);\nconst ClerkExpressRequireAuth =\n  singletonInstance.expressRequireAuth.bind(singletonInstance);\n\nexport { ClerkExpressWithAuth, ClerkExpressRequireAuth };\n\n// Export wrapper types for Next.js requests\nexport {\n  LooseAuthProp,\n  StrictAuthProp,\n  WithAuthProp,\n  RequireAuthProp,\n  Middleware as ClerkMiddleware,\n  MiddlewareOptions as ClerkMiddlewareOptions,\n} from './Clerk';\n\n// Export setters for the default singleton instance\n// Useful if you only have access to a sub-api instance\n\nexport function setClerkApiKey(value: string) {\n  Clerk.getInstance().apiKey = value;\n}\n\nexport function setClerkServerApiUrl(value: string) {\n  Clerk.getInstance().apiUrl = value;\n}\n\nexport function setClerkApiVersion(value: string) {\n  Clerk.getInstance().apiVersion = value;\n}\n\nexport function setClerkHttpOptions(value: RequestInit) {\n  Clerk.getInstance().httpOptions = value;\n}\n"]}