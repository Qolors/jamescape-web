"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifySignature = exports.importJSONWebKey = exports.importPKIKey = exports.toSPKIDer = exports.crypto = void 0;
const webcrypto_1 = require("@peculiar/webcrypto");
const Encoding_1 = require("./Encoding");
exports.crypto = new webcrypto_1.Crypto();
// toSPKIDer converts a PEM encoded Public Key to DER encoded
function toSPKIDer(pem) {
    const pemHeader = '-----BEGIN PUBLIC KEY-----';
    const pemFooter = '-----END PUBLIC KEY-----';
    const pemContents = pem.substring(pemHeader.length, pem.length - pemFooter.length);
    const binaryDerString = (0, Encoding_1.decodeBase64)(pemContents);
    return (0, Encoding_1.str2ab)(binaryDerString);
}
exports.toSPKIDer = toSPKIDer;
async function importPKIKey(publicKey) {
    return exports.crypto.subtle.importKey('spki', toSPKIDer(publicKey), {
        name: 'RSASSA-PKCS1-v1_5',
        hash: 'SHA-256',
    }, true, ['verify']);
}
exports.importPKIKey = importPKIKey;
async function importJSONWebKey(jwk, algorithm) {
    return await exports.crypto.subtle.importKey('jwk', jwk, algorithm, true, ['verify']);
}
exports.importJSONWebKey = importJSONWebKey;
async function verifySignature(algorithm, key, signature, data) {
    return exports.crypto.subtle.verify(algorithm, key, signature, data);
}
exports.verifySignature = verifySignature;
//# sourceMappingURL=Crypto.js.map